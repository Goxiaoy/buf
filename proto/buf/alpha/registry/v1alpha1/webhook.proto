// Copyright 2020-2022 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package buf.alpha.registry.v1alpha1;

// WebhookService exposes the functionality for a caller to
// subscribe to or unsubscribe to a Webhook for a given repository.
service WebhookService {
  rpc SubscribeToRepository(SubscribeToRepositoryRequest) returns (SubscribeToRepositoryResponse) {}
  rpc UnsubscribeToRepository(UnsubscribeToRepositoryRequest) returns (UnsubscribeToRepositoryResponse) {}
  rpc TestRepository(TestRepositoryRequest) returns (TestRepositoryResponse) {}
}

// SubscribeToRepositoryRequest is the proto request representation of a
// webhook request body.
message SubscribeToRepositoryRequest {
  //  // The owner name of the repository in the corresponding subscription request.
  //  string owner_name = 1;
  //  // The repository name that the subscriber wishes create a subscription for.
  //  string repository_name = 2;
  //  // The subscriber's callback URL where notifications
  //  // should be delivered. It is considered good practice
  //  // to use a unique callback URL for each subscription.
  //  string callback_url = 3;
  //  // Additional request parameter to be embedded into the request url.
  //  string request_parameters = 4;
  //  // Option 1:
  //  // Additional optional headers for the callback request.
  //  // List values can be embedded into a comma separated list
  //  map<string, string> request_headers = 5;
}

// CreateRepositoryResponse is the proto repsonse representation
// of a webhook request.
message SubscribeToRepositoryResponse {
  //  // The repository name given in the corresponding subscription request.
  //  string repository_name = 1;
  //  // The owner associated with the repository.
  //  string owner_name = 2;
}

message UnsubscribeToRepositoryRequest {}

message UnsubscribeToRepositoryResponse {}

message TestRepositoryRequest {}

message TestRepositoryResponse {}
